name: Main Branch Commit

on:
    push:
        branches: [ 'main' ]
    schedule:
        # At 5:30 am on the 1st and 15th day of the month (every two weeks)
        - cron: '30 5 1,15 * *'
    workflow_dispatch:

env:
    BUILD_TYPE: 'RELEASE' #BUILD_TYPE: Type of the build; allowed values: 'SNAPSHOT', 'RELEASE'
    CURRENT_BUILD_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    GITHUB_USERNAME: ${{ secrets.PERSONAL_GITHUB_USERNAME }}
    GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_GITHUB_ACCESS_TOKEN }}
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    MATCH_GIT_AUTHORIZATION: ${{ secrets.MATCH_GIT_AUTHORIZATION }}
    MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
    MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
    DEVELOPER_PORTAL_TEAM_ID: ${{ secrets.DEVELOPER_PORTAL_TEAM_ID }}
    CODE_SIGNING_IDENTITY: ${{ secrets.CODE_SIGNING_IDENTITY }}
    PROVISIONING_PROFILE_SPECIFIER: ${{ secrets.PROVISIONING_PROFILE_SPECIFIER }}
    KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
    SIGNING_CONFIGS: ${{ secrets.SIGNING_CONFIGS }}
    FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
    FIREBASE_APP_ID_ANDROID: ${{ secrets.FIREBASE_APP_ID_ANDROID }}
    FIREBASE_APP_ID_IOS: ${{ secrets.FIREBASE_APP_ID_IOS }}
    TEMP_KEYCHAIN_NAME: ${{ secrets.TEMP_KEYCHAIN_NAME }}
    HOST_NAME: ${{ secrets.HOST_NAME }}
    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    XCODE_VERSION: 14.3.1
    JAVA_VERSION: 11
    RUBY_VERSION: 3.0

jobs:
    lint-and-format:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup
              uses: ./.github/actions/setup

            - name: Lint files
              run: yarn lint

            - name: Run formatter on files
              run: yarn formatcheck

    get-version-number:
        needs: [lint-and-format]
        runs-on: ubuntu-latest
        outputs:
            version-number: ${{ steps.get_version.outputs.version-number }}
            build-number: ${{ steps.get_version.outputs.build-number }}
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Get version
              id: get_version
              uses: ./.github/actions/get-version

    build-android:
        runs-on: ubuntu-latest
        needs: [get-version-number]
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Build Android App with old arch
              uses: ./.github/actions/build-android
              with:
                  new-arch-enabled: false
                  version-number: ${{ needs.get-version-number.outputs.version-number }}
                  build-number: ${{ needs.get-version-number.outputs.build-number }}

    build-ios:
        runs-on: macos-13
        needs: [get-version-number]
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Build iOS App with old arch
              uses: ./.github/actions/build-ios
              with:
                  new-arch-enabled: false
                  version-number: ${{ needs.get-version-number.outputs.version-number }}
                  build-number: ${{ needs.get-version-number.outputs.build-number }}

    create-tag:
        needs: [get-version-number, build-android, build-ios]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Create git tag
              uses: ./.github/actions/git-tag
              with:
                  version-number: ${{ needs.get-version-number.outputs.version-number }}
                  build-number: ${{ needs.get-version-number.outputs.build-number }}
